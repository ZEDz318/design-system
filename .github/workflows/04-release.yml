name: Release

on:
  workflow_dispatch:
    inputs:
      incrementType:
        description: "Type of increment (see: semver.org)"
        required: true
        default: 'patch' 
        type: choice
        options:
        - major
        - minor
        - patch 
        
jobs:
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Send Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_GITHUB_CHANNEL_WEBHOOK }}
          title: "Release design-system: Starting"
          description: "Release design-system with proper semver. Publish nmp packages. Deploy Storybook on staging."
          color: 0xffed2b
          username: GitHub Actions

      - name: Checkout Repository
        uses: actions/checkout@v2
          
      - name: Git Identity
        run: |
          git config --global user.name 'geovbot'
          git config --global user.email 'github.bot@geovistory.org'
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch all Tags and Pull
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          git pull
          
      - name: Install Lerna globally
        run: npm install lerna --location=global
      
      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.2'
          registry-url: 'https://registry.npmjs.org'

      - name: Clean install dependencies
        run: npm ci

      - name: Build
        run: npm run build
      
      - uses: EndBug/add-and-commit@v5
        with:
          message: 'chore(): update build artifacts'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        id: lerna
        run: |
          lerna publish ${{ github.event.inputs.incrementType }} --yes
          echo ::set-output name=tag::$(cd ./packages/design-system-web && cat package.json | jq -r '.version')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
     
      - name: Echo tag created by lerna
        run: echo your taf is '${{steps.lerna.outputs.tag}}'
        
      - name: Update Lock files
        run: 'npm run update:lock'

      - uses: EndBug/add-and-commit@v5
        with:
          message: 'chore(): update lock files'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Build & Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/geovistory/design-system:${{steps.lerna.outputs.tag}}
      
      
      - name: Invoke workflow in public-chart to make a staging release
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-docker-image-tag
          repo: geovistory/public-chart
          ref: stag
          token: ${{ secrets.GEOVBOT_PAT_REPO }}
          inputs: |
            {
              "service": "design-system",
              "tag": "${{steps.lerna.outputs.tag}}",
              "environment": "stag"
            }
            
      - name: Send Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_GITHUB_CHANNEL_WEBHOOK }}
          title: "Deploy design-system release candidate on stag: Done"
          description: ""
          color: 0x0000ff
          username: GitHub Actions
